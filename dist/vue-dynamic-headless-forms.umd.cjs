(function(u,r){typeof exports=="object"&&typeof module<"u"?r(exports,require("vue"),require("@vuelidate/validators"),require("@vuelidate/core")):typeof define=="function"&&define.amd?define(["exports","vue","@vuelidate/validators","@vuelidate/core"],r):(u=typeof globalThis<"u"?globalThis:u||self,r(u["vue-dynamic-headless-forms"]={},u.Vue,u["@vuelidate/validators"],u["@vuelidate/core"]))})(this,function(u,r,t,g){"use strict";const v=r.defineComponent({__name:"DynamicFormField",props:r.mergeModels({field:{},context:{}},{modelValue:{},modelModifiers:{}}),emits:["update:modelValue"],setup(a){const l=r.useModel(a,"modelValue"),o=a,{field:i,context:d}=r.toRefs(o);function x(n){l.value=n}const T=r.computed(()=>{const n={};for(const e of i.value.validationRules||[])console.debug("Add validation rule: ",e),e.name=="required"&&(n.required=t.helpers.withMessage(e.errorText,t.required)),e.name=="required_if"&&(n.requiredIf=t.helpers.withMessage(e.errorText,t.requiredIf(!!d.value[e.otherFieldName]))),e.name=="required_unless"&&(n.requiredUnless=t.helpers.withMessage(e.errorText,t.requiredUnless(!!d.value[e.otherFieldName]))),e.name=="min_length"&&(n.minLength=t.helpers.withMessage(e.errorText,t.minLength(e.length))),e.name=="max_length"&&(n.maxLength=t.helpers.withMessage(e.errorText,t.maxLength(e.length))),e.name=="less_than"&&(n.lessThan=t.helpers.withMessage(e.errorText,t.maxValue(e.value))),e.name=="greater_than"&&(n.greaterThan=t.helpers.withMessage(e.errorText,t.minValue(e.value))),e.name=="same_as"&&(n.sameAs=t.helpers.withMessage(e.errorText,t.sameAs(d.value[e.otherFieldName])));return n}),M=r.computed(()=>({model:l.value})),q=r.computed(()=>({model:{...T.value}}));function m(n){function e(s){if(s.fieldType==="list")return[e(s.itemDefinition)];if(s.fieldType==="object"){let h={};for(const p of s.itemProperties||[])h[p.name]=e(p);return h}return JSON.parse(JSON.stringify(s.default))}return JSON.parse(JSON.stringify(e(n)))}const c=g(q,M);return r.onMounted(()=>{i.value.default&&(l.value===null||l.value===void 0)?l.value=JSON.parse(JSON.stringify(i.value.default)):i.value.fieldType==="object"&&(l.value===null||l.value===void 0||typeof l.value=="object"&&Object.keys(l.value).length===0)?l.value=m(i.value):i.value.fieldType==="list"&&(l.value===null||l.value===void 0)&&(l.value=new Array)}),(n,e)=>r.renderSlot(n.$slots,r.unref(i).fieldType,{field:r.unref(i),modelValue:l.value,setModelValue:x,getDefaultValue:m,errorMessages:r.unref(c).$error?r.unref(c).$errors.map(s=>s.$message):[]})}}),f=1e7,y=a=>a.sort((l,o)=>(l.fieldIndex||f)-(o.fieldIndex||f));u.DynamicFormField=v,u.sortFields=y,Object.defineProperty(u,Symbol.toStringTag,{value:"Module"})});
