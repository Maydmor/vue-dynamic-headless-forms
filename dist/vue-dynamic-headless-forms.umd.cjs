(function(s,r){typeof exports=="object"&&typeof module<"u"?r(exports,require("vue"),require("@vuelidate/validators"),require("@vuelidate/core")):typeof define=="function"&&define.amd?define(["exports","vue","@vuelidate/validators","@vuelidate/core"],r):(s=typeof globalThis<"u"?globalThis:s||self,r(s["vue-dynamic-headless-forms"]={},s.Vue,s["@vuelidate/validators"],s["@vuelidate/core"]))})(this,function(s,r,t,m){"use strict";const d=r.defineComponent({__name:"DynamicFormField",props:r.mergeModels({field:{},context:{}},{modelValue:{},modelModifiers:{}}),emits:["update:modelValue"],setup(o){const i=r.useModel(o,"modelValue"),f=o,{field:l,context:u}=r.toRefs(f);function h(n){i.value=n}const c=r.computed(()=>{const n={};for(const e of l.value.validationRules||[])e.name=="required"&&(n.required=t.helpers.withMessage(e.errorText,t.required)),e.name=="required_if"&&(n.requiredIf=t.helpers.withMessage(e.errorText,t.requiredIf(!!u.value[e.otherFieldName]))),e.name=="required_unless"&&(n.requiredUnless=t.helpers.withMessage(e.errorText,t.requiredUnless(!!u.value[e.otherFieldName]))),e.name=="min_length"&&(n.minLength=t.helpers.withMessage(e.errorText,t.minLength(u.value[e.length]))),e.name=="max_length"&&(n.maxLength=t.helpers.withMessage(e.errorText,t.maxLength(u.value[e.length]))),e.name=="less_than"&&(n.lessThan=t.helpers.withMessage(e.errorText,t.maxValue(u.value[e.value]))),e.name=="greater_than"&&(n.greaterThan=t.helpers.withMessage(e.errorText,t.minValue(u.value[e.value]))),e.name=="same_as"&&(n.sameAs=t.helpers.withMessage(e.errorText,t.sameAs(u.value[e.otherFieldName])));return n}),p=r.computed(()=>({model:i.value})),g=r.computed(()=>({model:{...c.value}})),a=m(g,p);return r.onMounted(()=>{l.value.default&&(i.value=l.value.default)}),(n,e)=>r.renderSlot(n.$slots,r.unref(l).type,{field:r.unref(l),modelValue:i.value,setModelValue:h,errorMessages:r.unref(a).$error?r.unref(a).$errors.map(x=>x.$message):[]})}});s.DynamicFormField=d,Object.defineProperty(s,Symbol.toStringTag,{value:"Module"})});
