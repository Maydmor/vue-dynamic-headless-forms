(function(l,t){typeof exports=="object"&&typeof module<"u"?t(exports,require("vue"),require("@vuelidate/validators"),require("@vuelidate/core")):typeof define=="function"&&define.amd?define(["exports","vue","@vuelidate/validators","@vuelidate/core"],t):(l=typeof globalThis<"u"?globalThis:l||self,t(l["vue-dynamic-headless-forms"]={},l.Vue,l["@vuelidate/validators"],l["@vuelidate/core"]))})(this,function(l,t,n,f){"use strict";const h=t.defineComponent({__name:"DynamicFormField",props:t.mergeModels({field:{},context:{}},{modelValue:{},modelModifiers:{}}),emits:["update:modelValue"],setup(d){const u=t.useModel(d,"modelValue"),c=d,{field:i,context:o}=t.toRefs(c);function p(r){u.value=r}const g=t.computed(()=>{const r={};for(const e of i.value.validationRules||[])console.debug("Add validation rule: ",e),e.name=="required"&&(r.required=n.helpers.withMessage(e.errorText,n.required)),e.name=="required_if"&&(r.requiredIf=n.helpers.withMessage(e.errorText,n.requiredIf(!!o.value[e.otherFieldName]))),e.name=="required_unless"&&(r.requiredUnless=n.helpers.withMessage(e.errorText,n.requiredUnless(!!o.value[e.otherFieldName]))),e.name=="min_length"&&(r.minLength=n.helpers.withMessage(e.errorText,n.minLength(e.length))),e.name=="max_length"&&(r.maxLength=n.helpers.withMessage(e.errorText,n.maxLength(e.length))),e.name=="less_than"&&(r.lessThan=n.helpers.withMessage(e.errorText,n.maxValue(e.value))),e.name=="greater_than"&&(r.greaterThan=n.helpers.withMessage(e.errorText,n.minValue(e.value))),e.name=="same_as"&&(r.sameAs=n.helpers.withMessage(e.errorText,n.sameAs(o.value[e.otherFieldName])));return r}),v=t.computed(()=>({model:u.value})),x=t.computed(()=>({model:{...g.value}}));function s(r){if(r.type==="list")return[s(r.itemDefinition)];if(r.type==="object"){let e={};for(const a of r.itemProperties||[])e[a.name]=s(a);return e}return r.default}const m=f(x,v);return t.onMounted(()=>{i.value.default&&(u.value===null||u.value===void 0)?u.value=i.value.default:i.value.type==="object"&&(u.value===null||u.value===void 0)?u.value=s(i.value):i.value.type==="list"&&(u.value===null||u.value===void 0)&&(u.value=[])}),(r,e)=>t.renderSlot(r.$slots,t.unref(i).type,{field:t.unref(i),modelValue:u.value,setModelValue:p,getDefaultValue:s,errorMessages:t.unref(m).$error?t.unref(m).$errors.map(a=>a.$message):[]})}});l.DynamicFormField=h,Object.defineProperty(l,Symbol.toStringTag,{value:"Module"})});
