(function(l,r){typeof exports=="object"&&typeof module<"u"?r(exports,require("vue"),require("@vuelidate/validators"),require("@vuelidate/core")):typeof define=="function"&&define.amd?define(["exports","vue","@vuelidate/validators","@vuelidate/core"],r):(l=typeof globalThis<"u"?globalThis:l||self,r(l["vue-dynamic-headless-forms"]={},l.Vue,l["@vuelidate/validators"],l["@vuelidate/core"]))})(this,function(l,r,t,m){"use strict";const h=r.defineComponent({__name:"DynamicFormField",props:r.mergeModels({field:{},context:{}},{modelValue:{},modelModifiers:{}}),emits:["update:modelValue"],setup(d){const s=r.useModel(d,"modelValue"),c=d,{field:u,context:i}=r.toRefs(c);function p(n){s.value=n}const g=r.computed(()=>{const n={};for(const e of u.value.validationRules||[])console.debug("Add validation rule: ",e),e.name=="required"&&(n.required=t.helpers.withMessage(e.errorText,t.required)),e.name=="required_if"&&(n.requiredIf=t.helpers.withMessage(e.errorText,t.requiredIf(!!i.value[e.otherFieldName]))),e.name=="required_unless"&&(n.requiredUnless=t.helpers.withMessage(e.errorText,t.requiredUnless(!!i.value[e.otherFieldName]))),e.name=="min_length"&&(n.minLength=t.helpers.withMessage(e.errorText,t.minLength(i.value[e.length]))),e.name=="max_length"&&(n.maxLength=t.helpers.withMessage(e.errorText,t.maxLength(i.value[e.length]))),e.name=="less_than"&&(n.lessThan=t.helpers.withMessage(e.errorText,t.maxValue(i.value[e.value]))),e.name=="greater_than"&&(n.greaterThan=t.helpers.withMessage(e.errorText,t.minValue(i.value[e.value]))),e.name=="same_as"&&(n.sameAs=t.helpers.withMessage(e.errorText,t.sameAs(i.value[e.otherFieldName])));return n}),x=r.computed(()=>({model:s.value})),M=r.computed(()=>({model:{...g.value}}));function o(n){if(u.value.type==="list")return o(u.value.itemDefinition);if(u.value.type==="object"){let e={};for(const a of u.value.properties||[])e[a.name]=o();return e}return u.value.default}const f=m(M,x);return r.onMounted(()=>{u.value.default&&(s.value=u.value.default)}),(n,e)=>r.renderSlot(n.$slots,r.unref(u).type,{field:r.unref(u),modelValue:s.value,setModelValue:p,getDefaultValue:o,errorMessages:r.unref(f).$error?r.unref(f).$errors.map(a=>a.$message):[]})}});l.DynamicFormField=h,Object.defineProperty(l,Symbol.toStringTag,{value:"Module"})});
