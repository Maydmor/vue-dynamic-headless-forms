(function(u,t){typeof exports=="object"&&typeof module<"u"?t(exports,require("vue"),require("@vuelidate/validators"),require("@vuelidate/core")):typeof define=="function"&&define.amd?define(["exports","vue","@vuelidate/validators","@vuelidate/core"],t):(u=typeof globalThis<"u"?globalThis:u||self,t(u["vue-dynamic-headless-forms"]={},u.Vue,u["@vuelidate/validators"],u["@vuelidate/core"]))})(this,function(u,t,l,f){"use strict";const h=t.defineComponent({__name:"DynamicFormField",props:t.mergeModels({field:{},context:{}},{modelValue:{},modelModifiers:{}}),emits:["update:modelValue"],setup(d){const n=t.useModel(d,"modelValue"),c=d,{field:i,context:o}=t.toRefs(c);function p(r){n.value=r}const g=t.computed(()=>{const r={};for(const e of i.value.validationRules||[])console.debug("Add validation rule: ",e),e.name=="required"&&(r.required=l.helpers.withMessage(e.errorText,l.required)),e.name=="required_if"&&(r.requiredIf=l.helpers.withMessage(e.errorText,l.requiredIf(!!o.value[e.otherFieldName]))),e.name=="required_unless"&&(r.requiredUnless=l.helpers.withMessage(e.errorText,l.requiredUnless(!!o.value[e.otherFieldName]))),e.name=="min_length"&&(r.minLength=l.helpers.withMessage(e.errorText,l.minLength(e.length))),e.name=="max_length"&&(r.maxLength=l.helpers.withMessage(e.errorText,l.maxLength(e.length))),e.name=="less_than"&&(r.lessThan=l.helpers.withMessage(e.errorText,l.maxValue(e.value))),e.name=="greater_than"&&(r.greaterThan=l.helpers.withMessage(e.errorText,l.minValue(e.value))),e.name=="same_as"&&(r.sameAs=l.helpers.withMessage(e.errorText,l.sameAs(o.value[e.otherFieldName])));return r}),v=t.computed(()=>({model:n.value})),T=t.computed(()=>({model:{...g.value}}));function s(r){if(r.fieldType==="list")return[s(r.itemDefinition)];if(r.fieldType==="object"){let e={};for(const a of r.itemProperties||[])e[a.name]=s(a);return e}return r.default}const m=f(T,v);return t.onMounted(()=>{i.value.default&&(n.value===null||n.value===void 0)?n.value=i.value.default:i.value.fieldType==="object"&&(n.value===null||n.value===void 0)?n.value=s(i.value):i.value.fieldType==="list"&&(n.value===null||n.value===void 0)&&(n.value=[])}),(r,e)=>t.renderSlot(r.$slots,t.unref(i).fieldType,{field:t.unref(i),modelValue:n.value,setModelValue:p,getDefaultValue:s,errorMessages:t.unref(m).$error?t.unref(m).$errors.map(a=>a.$message):[]})}});u.DynamicFormField=h,Object.defineProperty(u,Symbol.toStringTag,{value:"Module"})});
