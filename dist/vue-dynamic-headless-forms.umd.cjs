(function(u,r){typeof exports=="object"&&typeof module<"u"?r(exports,require("vue"),require("@vuelidate/validators"),require("@vuelidate/core")):typeof define=="function"&&define.amd?define(["exports","vue","@vuelidate/validators","@vuelidate/core"],r):(u=typeof globalThis<"u"?globalThis:u||self,r(u["vue-dynamic-headless-forms"]={},u.Vue,u["@vuelidate/validators"],u["@vuelidate/core"]))})(this,function(u,r,t,h){"use strict";const p=r.defineComponent({__name:"DynamicFormField",props:r.mergeModels({field:{},context:{}},{modelValue:{},modelModifiers:{}}),emits:["update:modelValue"],setup(o){const n=r.useModel(o,"modelValue"),g=o,{field:i,context:a}=r.toRefs(g);function v(l){n.value=l}const y=r.computed(()=>{const l={};for(const e of i.value.validationRules||[])console.debug("Add validation rule: ",e),e.name=="required"&&(l.required=t.helpers.withMessage(e.errorText,t.required)),e.name=="required_if"&&(l.requiredIf=t.helpers.withMessage(e.errorText,t.requiredIf(!!a.value[e.otherFieldName]))),e.name=="required_unless"&&(l.requiredUnless=t.helpers.withMessage(e.errorText,t.requiredUnless(!!a.value[e.otherFieldName]))),e.name=="min_length"&&(l.minLength=t.helpers.withMessage(e.errorText,t.minLength(e.length))),e.name=="max_length"&&(l.maxLength=t.helpers.withMessage(e.errorText,t.maxLength(e.length))),e.name=="less_than"&&(l.lessThan=t.helpers.withMessage(e.errorText,t.maxValue(e.value))),e.name=="greater_than"&&(l.greaterThan=t.helpers.withMessage(e.errorText,t.minValue(e.value))),e.name=="same_as"&&(l.sameAs=t.helpers.withMessage(e.errorText,t.sameAs(a.value[e.otherFieldName])));return l}),T=r.computed(()=>({model:n.value})),x=r.computed(()=>({model:{...y.value}}));function d(l){function e(s){if(s.fieldType==="list")return[e(s.itemDefinition)];if(s.fieldType==="object"){let m={};for(const c of s.itemProperties||[])m[c.name]=e(c);return m}return JSON.parse(JSON.stringify(s.default))}return JSON.parse(JSON.stringify(e(l)))}const f=h(x,T);return r.onMounted(()=>{i.value.default&&(n.value===null||n.value===void 0)?n.value=JSON.parse(JSON.stringify(i.value.default)):i.value.fieldType==="object"&&(n.value===null||n.value===void 0||typeof n.value=="object"&&Object.keys(n.value).length===0)?n.value=d(i.value):i.value.fieldType==="list"&&(n.value===null||n.value===void 0)&&(n.value=new Array)}),(l,e)=>r.renderSlot(l.$slots,r.unref(i).fieldType,{field:r.unref(i),modelValue:n.value,setModelValue:v,getDefaultValue:d,errorMessages:r.unref(f).$error?r.unref(f).$errors.map(s=>s.$message):[]})}});u.DynamicFormField=p,Object.defineProperty(u,Symbol.toStringTag,{value:"Module"})});
